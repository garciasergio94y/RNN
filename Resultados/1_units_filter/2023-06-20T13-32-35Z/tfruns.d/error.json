{
  "message": "TypeError: Dimension value must be integer or None or have an __index__ method, got value '['20', '4', 'static_input_layer']' with type '<class 'list'>'\n\u001b[90mRun \u001b]8;;rstudio:run:reticulate::py_last_error()\u0007`reticulate::py_last_error()`\u001b]8;;\u0007 for details.\u001b[39m",
  "traceback": ["py_call_impl(callable, call_args$unnamed, call_args$named)", "(structure(function (shape = NULL, batch_size = NULL, name = NULL, \n    dtype = NULL, sparse = NULL, tensor = NULL, ragged = NULL, \n    type_spec = NULL, ...) \n{\n    cl <- sys.call()\n    cl[[1L]] <- list2\n    call_args <- split_named_unnamed(eval(cl, parent.frame()))\n    result <- py_call_impl(callable, call_args$unnamed, call_args$named)\n    if (convert) \n        result <- py_to_r(result)\n    if (is.null(result)) \n        invisible(result)\n    else result\n}, class = c(\"python.builtin.function\", \"python.builtin.object\"\n), py_object = <environment>))(shape = <environment>)", "do.call(keras$layers$Input, args)", "layer_input(shape = c(lookback, static_features, name = \"static_input_layer\"))", "eval(ei, envir)", "eval(ei, envir)", "withVisible(eval(ei, envir))", "tuning_run(\"LSTM_samples_script.R\", runs_dir = file.path(resultsdir, \n    \"1_units_filter\"), sample = 0.1, flags = list(batch_size = c(256), \n    conv_filters = c(12, 24), lstm_units = c(8, 32)))"]
}
